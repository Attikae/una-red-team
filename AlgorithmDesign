


int depth
int prefNum


for each course
  create course section array
  for each section of the course
    for each faculty

      if section is day && facultyPrefs->daySecNum
        prefNum = Get valid prefs
        depth = min of (prefNum and sections)
        RecursiveFunction(faculty, &depth, faculty->pref_bools)
      else if section is night && facultyPrefs->nightSecNum
        if they have pref, they get course
      else if internet && facultyPrefs->internetSecNum
        if they have pref, they get course

    end for each faculty
  end while
end for each course



RecursiveFunction(faculty, &depth, pref_bools)
{
    if depth > 0
      if faculty has available hours && not already teaching course
            if faculty->pref_bools intersects pref_bools
              Get valid prefs
              if valid prefs not zero
                  RecursiveFunction(faculty+1, depth-1, pref_bools)
              schedule section of course for them
            else
              RecursiveFunction(faculty+1, depth, pref_bools)
            end if
      end if
}



Get valid prefs
  for each pref (pref is a time period)
    Get available time in the pref's range
    if there are times available for the pref
      pref is valid
  end for                   


  Get available times must take into account conflict times, other courses that have been scheduled, and other same level courses that are scheduled at the same time that are not prereqs for a course
